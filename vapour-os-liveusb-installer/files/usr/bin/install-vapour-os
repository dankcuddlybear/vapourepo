#!/bin/bash
[ "$(whoami)" != "root" ] && echo "[ERROR] You must run this installer as root" && exit 1
DISTRO_ID="vapour-os"
DISTRO_NAME="Vapour OS"
[ ! -z "$DEBUG" ] && DEBUG=0; [ "$DEBUG" == 1 ] && echo "Debug mode enabled"
[ "$DEBUG" == 1 ] && BACKTITLE="$DISTRO_NAME installer (debug mode)" || BACKTITLE="$DISTRO_NAME installer"
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
PAGE=0 # 0: Main menu, 1: Select preset, 2: Select root partition, 3: Select boot partition

GetDisks() {
	unset DISKCHOICES # Numbered list of disks to be used later by dialog (1 /dev/sda 2 /dev/nvme0n1 etc...)
	DISKS=$(lsblk -dnpo NAME) # List of disks
	DISKNO=1
	for DISK in $DISKS; do
		DISKCHOICES="$DISKCHOICES $DISKNO $DISK"
		((DISKNO++))
	done
	unset DISK DISKNO
}

GetPartitions() {
	unset SYSPARTITIONS PARTCHOICES PARTITIONS
	GetDisks
	for DISK in $DISKS; do
		SYSPARTITIONS="$SYSPARTITIONS $(lsblk $DISK -lnpo NAME | grep -vx "$DISK")"
	done
	PARTNO=1
	for PARTITION in $SYSPARTITIONS; do
		# First, check that this partition hasn't already been chosen
		if ([ -z $ROOT_DEV ] || [ $ROOT_DEV != "$PARTITION" ]) &&
		([ -z $BOOT_DEV ] || [ $BOOT_DEV != "$PARTITION" ]) &&
		([ -z $HOME_DEV ] || [ $HOME_DEV != "$PARTITION" ]) &&
		([ -z $MEDIA_DEV ] || [ $MEDIA_DEV != "$PARTITION" ]) &&
		([ -z $PUBLIC_DEV ] || [ $PUBLIC_DEV != "$PARTITION" ]); then
			PARTCHOICES="$PARTCHOICES $PARTNO $PARTITION"
			PARTITIONS="$PARTITIONS $PARTITION"
			((PARTNO++))
		fi
	done
	unset DISK PARTITION PARTNO SYSPARTITIONS
}

PartitionTool() {
	DISKSELECT=$(dialog --stdout --backtitle "$BACKTITLE" --cancel-label "Back" --title "Partitioning tool" --menu "WARNING: Any changes to partitions will occur immediately after exiting the partitioning tool. Data loss may occur. Please be careful!\n\nPlease select disk:" 0 0 0 $DISKCHOICES)
	if [ ! -z $DISKSELECT ]; then
		DISK=$(echo $DISKS | cut -d ' ' -f $DISKSELECT)
		## Try to launch cfdisk, then fdisk if cfdisk isn't available, then display an error (debug)
		cfdisk $DISK || fdisk $DISK || dialog --backtitle "$BACKTITLE" --title "Error" --msgbox "Failed to launch partitioning tool or failed to open $DISK!" 0 0
	fi
}

PartitionChooser() {
	case $PAGE in # Partition name to be displayed in dialog. Unset previously selected partitions if going back a page, and optional if partition is required.
		2) PARTNAME="root"; unset ROOT_DEV FORMAT_ROOT LABEL_ROOT BOOT_DEV FORMAT_BOOT LABEL_BOOT;;
		3) PARTNAME="boot"; unset BOOT_DEV FORMAT_BOOT LABEL_BOOT HOME_DEV FORMAT_HOME LABEL_HOME;;
		4) PARTNAME="home"; unset HOME_DEV FORMAT_HOME LABEL_HOME MEDIA_DEV FORMAT_MEDIA LABEL_MEDIA; OPTIONAL="n None";;
		5) PARTNAME="media"; unset MEDIA_DEV FORMAT_MEDIA LABEL_MEDIA PUBLIC_DEV FORMAT_MEDIA LABEL_MEDIA; OPTIONAL="n None";;
		6) PARTNAME="public"; unset PUBLIC_DEV FORMAT_PUBLIC LABEL_PUBLIC; OPTIONAL="n None";;
		7) PARTNAME="swap"; unset SWAP_DEV; OPTIONAL="n None";;
	esac
	GetPartitions
	PARTSELECTNO=$(dialog --stdout --backtitle "$BACKTITLE" --cancel-label "Back" --title "Partition selection" --menu "Please select $PARTNAME partition:" 0 0 0 $OPTIONAL $PARTCHOICES "p" "Launch partitioning tool")
	if [ -z $PARTSELECTNO ]; then ((PAGE--)) # Go back a page if back is selected
	elif [ $PARTSELECTNO == "p" ]; then PartitionTool
	else
		if [ $PARTSELECTNO != "n" ]; then # Select this partition unless "none" chosen
			PARTSELECT=$(echo $PARTITIONS | cut -d ' ' -f $PARTSELECTNO)
			FSTYPE=$(lsblk $PARTSELECT -dnpo FSTYPE) # Get partition type
			FSSIZE=$(lsblk $PARTSELECT -dnpo SIZE) # Get partition size
			FSSIZE_BYTES=$(blockdev --getsize64 $PARTSELECT) # Get partition size in bytes
			LABEL=$(lsblk $PARTSELECT -dnpo LABEL) # Get partition label
			if [ $FSTYPE == "swap" ]; then [ -z "$(cat /proc/swaps | grep "$PARTSELECT")" ] && MOUNTED="No" || MOUNTED="Yes"
			else [ -z "$(mount | grep "$PARTSELECT")" ] && MOUNTED="No" || MOUNTED="Yes"; fi

			if [ $PARTNAME == "root" ] && [ $FSSIZE_BYTES -lt 2147483648 ]; then
				dialog --backtitle "$BACKTITLE" --title "Partition info" --msgbox "Device:  $PARTSELECT\nLabel:   $LABEL\nSize:    $FSSIZE\nType:    $FSTYPE\nMounted: $MOUNTED\n\nThe selected partition is too small. It needs to be at least 2GiB in size." 0 0
				CONFIRM=0
			elif [ $PARTNAME == "boot" ] && [ $FSSIZE_BYTES -lt 536870912 ]; then
				dialog --backtitle "$BACKTITLE" --title "Partition info" --msgbox "Device:  $PARTSELECT\nLabel:   $LABEL\nSize:    $FSSIZE\nType:    $FSTYPE\nMounted: $MOUNTED\n\nThe selected partition is too small. It needs to be at least 512MiB in size." 0 0
				CONFIRM=0
			else
				## Display partition info and confirm or go back
				dialog --backtitle "$BACKTITLE" --title "Partition info" --yesno "Device:  $PARTSELECT\nLabel:   $LABEL\nSize:    $FSSIZE\nType:    $FSTYPE\nMounted: $MOUNTED\n\nSelect as $PARTNAME partition?" 0 0 && CONFIRM=1 || CONFIRM=0
			fi

			if [ $CONFIRM == 1 ]; then
				## Check partition is formatted correctly (vfat for ESP, ext4 for all others except swap)
				if ([ $PARTNAME == "root" ] && [ $FSTYPE == "ext4" ]) ||
				([ $PARTNAME == "boot" ] && [ $FSTYPE == "vfat" ]) ||
				([ $PARTNAME == "home" ] && [ $FSTYPE == "ext4" ]) ||
				([ $PARTNAME == "media" ] && [ $FSTYPE == "ext4" ]) ||
				([ $PARTNAME == "public" ] && [ $FSTYPE == "ext4" ]); then
					dialog --backtitle "$BACKTITLE" --title "Format partition" --yesno "Would you like to format this partition?\nIf you do, all data on this partition will be lost forever.\nIf not, only system files from the previous Linux installation will be removed, and all other files will be kept." 0 0 && FORMAT=1 || FORMAT=0
				elif [ $PARTNAME != "swap" ]; then # Partition is not formatted correctly
					dialog --backtitle "$BACKTITLE" --title "Warning" --msgbox "This partition appears to be unformatted or incorrectly formatted. It will be formatted before installation. If it contains important data, back it up now!" 0 0
					FORMAT=1
				fi
				## Detect existing label if possible, otherwise suggest default label. Then, ask to set the label.
				if [ -z "$LABEL" ]; then
					if [ $PARTNAME == "root" ]; then LABEL="$DISTRO_ID"
					elif [ $PARTNAME == "boot" ]; then LABEL="BOOT"
					else LABEL="$PARTNAME"; fi
				fi
				LABEL="$(dialog --stdout --backtitle "$BACKTITLE" --cancel-label "None" --title "Volume label" --inputbox "Enter volume label:" 0 0 "$LABEL")"
				[ $FSTYPE == "vfat" ] && LABEL="${LABEL^^}" # Capitalise label if partition type is vfat
			fi
		else unset PARTSELECT FORMAT LABEL; CONFIRM=1; fi
		if [ $CONFIRM == 1 ]; then
			case $PARTNAME in
				"root") export ROOT_DEV=$PARTSELECT; export FORMAT_ROOT=$FORMAT; export LABEL_ROOT="$LABEL";;
				"boot") export BOOT_DEV=$PARTSELECT; export FORMAT_BOOT=$FORMAT; export LABEL_BOOT="${LABEL^^}";;
				"home") export HOME_DEV=$PARTSELECT; export FORMAT_HOME=$FORMAT; export LABEL_HOME="$LABEL";;
				"media") export MEDIA_DEV=$PARTSELECT; export FORMAT_MEDIA=$FORMAT; export LABEL_MEDIA="$LABEL";;
				"public") export PUBLIC_DEV=$PARTSELECT; export FORMAT_PUBLIC=$FORMAT; export LABEL_PUBLIC="$LABEL";;
				"swap") export SWAP_DEV=$PARTSELECT; export LABEL_SWAP="$LABEL";;
			esac
			unset FSTYPE PARTSELECT PARTSELECTNO PARTNAME PARTITIONS PARTCHOICES OPTIONAL LABEL FORMAT
			((PAGE++))
		fi
	fi
}
SelectVersion() {
	unset VERSION_TO_INSTALL
	export VERSION_TO_INSTALL=$(dialog --stdout --backtitle "$BACKTITLE" --cancel-label "Back" --title "Version selection" --menu "Please select a version to install:" 0 0 0 \
	"vapour-os-kde" "KDE Plasma (best for Windows users)" \
	"vapour-os-xfce" "XFCE (best for older devices)" \
	"vapour-os-gnome" "GNOME Shell (best for touch devices)" \
	"vapour-os-desktop-libs" "Command line only (PCs/laptops)" \
	"vapour-os" "Core system only (servers and embedded devices)")
	[ -z "$VERSION_TO_INSTALL" ] && ((PAGE--)) || ((PAGE++))
}
SelectKernel() {
	unset KERNELS
	export KERNELS="$(dialog --stdout --backtitle "$BACKTITLE" --cancel-label "Back" --title "Linux kernel" --checklist "Select one or more Linux kernels to install:" 0 0 0 \
	"OFFICIALLY SUPPORTED" "" "OFF" \
	"  linux" "Linux kernel and modules" "ON" \
	"  linux-hardened" "Security-Hardened Linux kernel and modules" "OFF" \
	"  linux-lts" "Linux LTS kernel and modules" "OFF" \
	"  linux-rt" "Linux realtime kernel and modules" "OFF" \
	"  linux-rt-lts" "Linux realtime LTS kernel and modules" "OFF" \
	"  linux-zen" "Linux ZEN kernel and modules" "OFF" \
	"HARDWARE OPTIMISED" "" "OFF" \
	"  linux-amd" "Linux kernel aimed at ZNVER4/MZEN4 AMD Ryzen CPU based hardware" "OFF" \
	"  linux-amd-znver2" "Linux kernel aimed at znver2 AMD Ryzen CPU based hardware" "OFF" \
	"  linux-amd-znver3" "Linux kernel aimed at znver3 AMD Ryzen CPU based hardware" "OFF" \
	"  linux-hdr-git" "Linux kernel and modules with AMDGPU HDR support" "OFF" \
	"  linux-nitrous" "Linux kernel and modules optimized for Skylake and newer, compiled using clang" "OFF" \
	"LINUX-TKG" "" "OFF" \
	"  linux-lts-tkg-bmq" "Linux-tkg BMQ scheduler LTS kernel and modules" "OFF" \
	"  linux-lts-tkg-pds" "Linux-tkg PDS scheduler LTS kernel and modules" "OFF" \
	"  linux-lts-tkg-tt" "Linux-tkg TT scheduler LTS kernel and modules" "OFF" \
	"  linux-tkg" "Linux-tkg kernel and modules" "OFF" \
	"  linux-tkg-bmq-generic_v3" "Linux-tkg BMQ scheduler kernel and modules" "OFF" \
	"  linux-tkg-cfs" "Linux-tkg CFS scheduler kernel and modules" "OFF" \
	"  linux-tkg-cfs-generic_v3" "Linux-tkg CFS scheduler kernel and modules" "OFF" \
	"  linux-tkg-cfs-lto_v3" "Linux-tkg CFS scheduler kernel and modules" "OFF" \
	"  linux-tkg-pds" "Linux-tkg PDS scheduler kernel and modules" "OFF" \
	"  linux-tkg-pds-generic_v3" "Linux-tkg PDS scheduler kernel and modules" "OFF" \
	"  linux-tkg-tt" "Linux-tkg TT scheduler kernel and modules" "OFF" \
	"  linux-tkg-tt-generic_v3" "Linux-tkg TT scheduler kernel and modules" "OFF" \
	"OTHER" "" "OFF" \
	"  linux-cachyos-bore" "Linux BORE scheduler kernel and modules by CachyOS with other patches and improvements (recommended)" "OFF" \
	"  linux-clear" "Intel's Clear Linux kernel and modules" "OFF" \
	"  linux-drm-next-git" "Linux kernel and modules with bleeding-edge GPU drivers" "OFF" \
	"  linux-drm-tip-git" "Linux kernel and modules with bleeding-edge GPU drivers" "OFF" \
	"  linux-git" "Linus Torvalds' Mainline Linux kernel and modules" "OFF" \
	"  linux-lqx" "Linux Liquorix kernel and modules" "OFF" \
	"  linux-mainline" "Linux Mainline kernel and modules" "OFF" \
	"  linux-next-git" "Linux NEXT kernel and modules" "OFF" \
	"  linux-tt" "TT scheduler Linux kernel by CachyOS with other patches and improvements. May not boot on some BIOSes." "OFF" \
	"  linux-xanmod" "Linux kernel and modules with Xanmod patches" "OFF" \
	"  linux-xanmod-lts" "Linux LTS kernel and modules with Xanmod patches" "OFF" \
	"  linux-xanmod-rt" "Linux realtime kernel and modules with Xanmod patches" "OFF" \
	)"
	if [ ! -z "$KERNELS" ]; then # Remove category names from selection
		KERNELS="${KERNELS/OFFICIALLY SUPPORTED/}"
		KERNELS="${KERNELS/HARDWARE OPTIMISED/}"
		KERNELS="${KERNELS/LINUX-TKG/}"
		KERNELS="${KERNELS/OTHER/}"
		KERNELS="$(echo "$KERNELS" | sed 's/\"//g')"
	fi
	if [ -z "$KERNELS" ]; then
		dialog --backtitle "$BACKTITLE" --title "Error" --msgbox "Please select at least 1 Linux kernel." 0 0
	else ((PAGE++)); fi
}
SelectExtraSoftware() {
	unset EXTRA_SOFTWARE
	export EXTRA_SOFTWARE="$(dialog --stdout --backtitle "BACKTITLE" --cancel-label "Skip" --title "Recommended software" --checklist "Would you like to install additional software?
	See also https://wiki.archlinux.org/title/Category:Lists_of_software" 0 0 0 \
	"GAMING" "--------" "OFF" \
	"  vapour-os-gaming" "Linux/Windows game compatibility (64bit+32bit)" "OFF" \
	"  dolphin-emu" "Play your Nintendo Gamecube, Wii and Triforce games on your PC. NO GAMES OR COPYRIGHTED FILES INCLUDED - SOURCE THESE YOURSELF" "OFF" \
	"  gzdoom" "Play DOOM engine games on modern PCs. NO GAMES OR COPYRIGHTED FILES INCLUDED - SOURCE THESE YOURSELF" "OFF" \
	"  melonds-git" "Nintendo DS(i) emulator. NO GAMES OR COPYRIGHTED FILES INCLUDED - SOURCE THESE YOURSELF" "OFF" \
	"  prismlauncher-qt5" "Open-source Minecraft Launcher and mod manager. YOU MUST PURCHASE MINECRAFT TO PLAY" "OFF" \
	"  steam-native-runtime" "PC game storefront and launcher by Valve" "OFF" \
	"INTERNET" "(for web browsers, scroll down further)" "OFF" \
	"  discord" "Voice and video chat software" "OFF" \
	"  qbittorrent" "Advanced BitTorrent client based on Qt" "OFF" \
	"MULTIMEDIA" "--------" "OFF" \
	"  gimp" "GNU Image Manipulation Program" "OFF" \
	"  kolourpaint" "Paint program by KDE" "OFF" \
	"  obs-studio" "Free open-source recording/streaming software" "OFF" \
	"  vlc" "Multi-format media player/streamer and CD/VCD/DVD/BD player" "OFF" \
	"OFFICE, TEXT" "--------" "OFF" \
	"  nano-syntax-highlighting" "Text editor for terminal" "OFF" \
	"  onlyoffice-bin" "Office suite combining text, spreadsheet and presentation editors" "OFF" \
	"SYSTEM" "--------" "OFF" \
	"  gparted" "Graphical partition manager" "OFF" \
	"WEB BROWSERS" "--------" "OFF" \
	"  brave-bin" "Web browser that blocks ads and trackers by default" "OFF" \
	"  chromium" "Open-source browser from which Google Chrome is based." "OFF" \
	"    chromium-widevine" "Chromium plugin for viewing premium video content" "OFF" \
	"    ublock-origin" "Chromium extension for blocking ads, trackers, miners, popups, malware sites and more. Fast, potent and lean." "OFF" \
	"  firefox-i18n-en-gb" "Firefox browser (with British English language pack)" "OFF" \
	"  firefox-i18n-en-us" "Firefox browser (with American English language pack)" "OFF" \
	"  firefox-i18n-en-ca" "Firefox browser (with Canadian English language pack)" "OFF" \
	"  icecat" "GNU version of the Firefox browser." "OFF" \
	"  librewolf" "Community-maintained fork of Firefox focused on privacy, security and freedom." "OFF" \
	"  midori" "Lightweight web browser" "OFF" \
	"  opera" "Fast and secure web browser" "OFF" \
	"  vivaldi" "An advanced browser made with the power user in mind" "OFF" \
	"CASUAL GAMES" "--------" "OFF" \
	"  gnome-2048" "Slide numbered tiles on a grid to combine them to create a tile with the number 2048" "OFF" \
	"  gnome-chess" "Computer version of Chess" "OFF" \
	"  gnome-mahjongg" "Disassemble a pile of tiles by removing matching pairs" "OFF" \
	"  gnome-mines" "Minesweeper clone" "OFF" \
	"  gnome-nibbles" "Snake-like game, playable with up to 6 players" "OFF" \
	"  gnome-sudoku" "Test your logic skills in this number grid puzzle" "OFF" \
	"  gnome-taquin" "Sliding picture puzzle" "OFF" \
	"  iagno" "Computer version of Reversi" "OFF" \
	"  kfourinline" "Computer version of Connect 4" "OFF" \
	"  kigo" "Computer version of Go" "OFF" \
	"  khangman" "Hangman game" "OFF" \
	"  knavalbattle" "Computer version of Battleships" "OFF" \
	"  ksirk" "Computer version of Risk. Supports up to 6 human/AI players and network multiplayer" "OFF" \
	"  kubrick" "Rubik's cube game" "OFF" \
	"  lbreakout2" "Breakout inspired game with nice effects, graphics and sounds" "OFF" \
	"  palapeli" "Single-player jigsaw puzzle game" "OFF" \
	"  picmi" "Nonogram logic game similar to Picross" "OFF" \
	"  puzzles " "Simon Tatham's Portable Puzzle Collection" "OFF" \
	"  pysolfc" "Collection of over 1000 solitaire games" "OFF" \
	"  quadrapassel" "Tetris clone" "OFF" \
	"FREE GAMES" "--------" "OFF" \
	"  0ad" "Historically-based real-time 3D strategy game" "OFF" \
	"  cuyo" "Tetris-style puzzle game for up to two players with a twist" "OFF" \
	"  dwarffortress" "Single-player fantasy game in which you build a dwarven outpost or play an adventurer in a randomly generated world" "OFF" \
	"  glhack" "Port of Nethack, a single player dungeon exploration game in 2D" "OFF" \
	"  hedgewars" "Worms clone. Take turns to blast your opponents into oblivion with comedic results!" "OFF" \
	"  mari0" "Original Super Mario Bros with Portal gun mechanics" "OFF" \
	"  shattered-pixel-dungeon" "Roguelike dungeon crawler with randomized levels and enemies, and hundreds of items" "OFF" \
	"  supertux" "Super Mario style 2D platformer starring Tux" "OFF" \
	"  supertuxkart" "Kart racing game featuring Tux and his friends" "OFF" \
	"  wesnoth" "Free, turn-based tactical strategy game with a high fantasy theme, featuring both single-player, and online/hotseat multiplayer combat" "OFF" \
	"EDUCATIONAL" "--------" "OFF" \
	"  artikulate" "Improve your pronunciation by listening to native speakers" "OFF" \
	"  blinken" "Memory enhancement game" "OFF" \
	"  gcompris-qt" "Educational software suite comprising of numerous activities for children aged 2 to 10" "OFF" \
	"  kalzium" "Periodic table of elements" "OFF" \
	"  kanagram" "Letter order game" "OFF" \
	"  kbruch" "Practice fractions and percentages" "OFF" \
	"  kgeography" "Geography trainer" "OFF" \
	"  klettres" "Learn the alphabet" "OFF" \
	"  ktouch" "Touch typing tutor" "OFF" \
	"  kturtle" "Turtlescript edcational programming environment" "OFF" \
	"  marble" "Desktop globe with maps for Earth, the Moon and other planets" "OFF" \
	"  minuet" "Music Education software by KDE" "OFF" \
	"  scratch" "Create and share your own interactive stories, games, music and art" "OFF"
	)"
	if [ ! -z "$EXTRA_SOFTWARE" ]; then # Remove category names from selection
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/GAMING/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/INTERNET/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/MULTIMEDIA/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/OFFICE, TEXT/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/SYSTEM/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/WEB BROWSERS/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/CASUAL GAMES/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/FREE GAMES/}"
		EXTRA_SOFTWARE="${EXTRA_SOFTWARE/EDUCATIONAL/}"
		EXTRA_SOFTWARE="$(echo "$EXTRA_SOFTWARE" | sed 's/\"//g')"
	fi
	if [ ! -z "$EXTRA_SOFTWARE" ]; then
		[[ "$EXTRA_SOFTWARE" == *"chromium"* ]] && EXTRA_SOFTWARE="$EXTRA_SOFTWARE chromium-widevine"
		([[ "$EXTRA_SOFTWARE" == *"firefox-i18n-en-gb"* ]] || \
		[[ "$EXTRA_SOFTWARE" == *"firefox-i18n-en-us"* ]] || \
		[[ "$EXTRA_SOFTWARE" == *"firefox-i18n-en-ca"* ]]) && EXTRA_SOFTWARE="$EXTRA_SOFTWARE firefox-ublock-origin"
		[[ "$EXTRA_SOFTWARE" == *"gparted"* ]] && EXTRA_SOFTWARE="$EXTRA_SOFTWARE gpart mtools ntfs-3g"
		[[ "$EXTRA_SOFTWARE" == *"vivaldi"* ]] && EXTRA_SOFTWARE="$EXTRA_SOFTWARE vivaldi-ffmpeg-codecs"
	fi
	((PAGE++))
}

dialog --backtitle "$BACKTITLE" --title "Welcome" --msgbox "Thank you for choosing $DISTRO_NAME!
$DISTRO_NAME is open source - github.com/dankcuddlybear/vapourepo (some proprietary drivers are included)
If you have issues with the installer, please file a bug report on the Github link above.
If you have any other issues, please consult the excellent Arch Wiki (wiki.archlinux.org) or use a search engine before filing a bug report.
Press ENTER to continue (or CTRL+C to quit at any time)." 0 0
while true; do
	case $PAGE in
		0) # Main menu - choose normal or automated install
			INSTALL_MODE=$(dialog --stdout --backtitle "$BACKTITLE" --cancel-label "Exit" --title "Main menu" --menu "What would you like to do?" 0 0 0 "1" "Install $DISTRO_NAME" "2" "Load preset for automated install (not yet available)")
			if [ -z $INSTALL_MODE ]; then clear; echo "Aborted installation."; exit # Abort installation if abort is selected
			elif [ $INSTALL_MODE == 1 ]; then PAGE=2
			elif [ $INSTALL_MODE == 2 ]; then PAGE=1
			fi
			;;
		1) # Preset chooser
			if [ $INSTALL_MODE == 1 ]; then PAGE=0 # Go to first page if not using automated install
			else
				dialog --backtitle "$BACKTITLE" --title "Error" --msgbox "This feature is not yet implemented." 0 0
				PAGE=0
			fi
			;;
		# Choose partitions
		2) PartitionChooser;; 3) PartitionChooser;; 4) PartitionChooser;; 5) PartitionChooser;; 6) PartitionChooser;; 7) PartitionChooser;;
		8) SelectKernel;; 9) SelectVersion;; 10) SelectExtraSoftware;; # Choose extra software
		11) # Connect to the internet
			ping -c 1 archlinux.org &> /dev/null && INTERNET_CONNECTED=1 || INTERNET_CONNECTED=0
			if [ $INTERNET_CONNECTED == 0 ]; then
				dialog --backtitle "$BACKTITLE" --title "No internet connection" --yesno \
				"It looks like you aren't connected to the internet. An internet connection is required to install $DISTRO_NAME. Please verify that you are connected.
				\nOpen NetworkManager menu?" 0 0 && nmtui
			fi
			((PAGE++))
			;;
		12) # Review settings before install
			## Generate dialog text
			FINALTEXT="$DISTRO_NAME is ready to be installed. Please review the following changes:\n[ROOT] $ROOT_DEV"
			[ ! -z "$LABEL_ROOT" ] && FINALTEXT="$FINALTEXT \"$LABEL_ROOT\""; [ $FORMAT_ROOT == 1 ] && FINALTEXT="$FINALTEXT (format)"
			FINALTEXT="$FINALTEXT\n[BOOT] $BOOT_DEV"; [ ! -z "$LABEL_BOOT" ] && FINALTEXT="$FINALTEXT \"$LABEL_BOOT\""; [ $FORMAT_BOOT == 1 ] && FINALTEXT="$FINALTEXT (format)"
			if [ ! -z $HOME_DEV ]; then
				FINALTEXT="$FINALTEXT\n[HOME] $HOME_DEV"; [ ! -z "$LABEL_HOME" ] && FINALTEXT="$FINALTEXT \"$LABEL_HOME\""; [ $FORMAT_HOME == 1 ] && FINALTEXT="$FINALTEXT (format)"
			fi
			if [ ! -z $MEDIA_DEV ]; then
				FINALTEXT="$FINALTEXT\n[MEDIA] $MEDIA_DEV"; [ ! -z "$LABEL_MEDIA" ] && FINALTEXT="$FINALTEXT \"$LABEL_MEDIA\""; [ $FORMAT_MEDIA == 1 ] && FINALTEXT="$FINALTEXT (format)"
			fi
			if [ ! -z $PUBLIC_DEV ]; then
				FINALTEXT="$FINALTEXT\n[PUBLIC] $PUBLIC_DEV"; [ ! -z "$LABEL_PUBLIC" ] && FINALTEXT="$FINALTEXT \"$LABEL_PUBLIC\""; [ $FORMAT_PUBLIC == 1 ] && FINALTEXT="$FINALTEXT (format)"
			fi
			if [ ! -z $SWAP_DEV ]; then
				FINALTEXT="$FINALTEXT\n[SWAP] $SWAP_DEV"; [ ! -z "$LABEL_SWAP" ] && FINALTEXT="$FINALTEXT \"$LABEL_SWAP\""; FINALTEXT="$FINALTEXT (format)"
			fi
			FINALTEXT="$FINALTEXT\n\nApply changes and begin installation?"
 			dialog --backtitle "$BACKTITLE" --title "Confirm changes" --yesno "$FINALTEXT" 0 0 && ((PAGE++)) || PAGE=8
 			;;
		13) # Begin installation
			clear
			echo "Installation of $DISTRO_NAME has now begun. Grab a cup of tea, because this will take a while."
			echo "DO NOT turn off your device or disconnect it from the internet."
			echo; sleep 2
			if [ "$DEBUG" == 1 ]; then (DEBUG=1 "/usr/lib/$DISTRO_ID/$DISTRO_ID-liveusb-installer" || exit 1)
			else ("/usr/lib/$DISTRO_ID/$DISTRO_ID-liveusb-installer" || exit 1); fi
			sync
			echo; echo "Installation complete! You may reboot your computer."; exit 0;;
	esac
done
