#!/bin/sh
MODE="$1"
FILENAME="$2"
KEY="$3"
VALUE="$4"
PrintHelp() {
	echo "setvar: Edit variables in files. Supports simple KEY=VALUE pairs."
	echo "Usage: setvar <mode> <file> <key> <value>"
	echo "Mode:"
	echo "    set <value> Set value of a variable. If it does not exist it will be created."
	echo "    query       Print value of a variable."
	echo "    delete      Delete a variable from the file."
	echo "Examples:"
	echo "    setvar set /etc/environment XCURSOR_SIZE 24"
	echo "    setvar query /etc/environment XCURSOR_SIZE"
	echo "    setvar delete /etc/environment XCURSOR_SIZE"
}
# Error handling
[ -z $MODE ] && echo "[ERROR] You must specify a mode!" && PrintHelp && exit 1
[ $MODE != "set" ] && [ $MODE != "query" ] && [ $MODE != "delete" ] && echo "[ERROR] Invalid mode \"$MODE\"!" && PrintHelp && exit 1
[ -z "$FILENAME" ] && echo "[ERROR] You must specify a file name!" && PrintHelp && exit 1
[ ! -f "$FILENAME" ] && touch "$FILENAME" # Create the file if it does not exist
[ -z $KEY ] && echo "[ERROR] You must specify a variable to read/write!" && PrintHelp && exit 1

KEYLEN=${#KEY} # Length of specified var name
IFS=$'\n' # Set delimiter to newline instead of space
FILE_OLD=$(cat "$FILENAME") # Read file contents

# Read the file line-by-line and search for the key.
# If setting or deleting, set the new file contents.
LINE_NO=1
LINE_NO_NEW=1
unset SEARCH
FILE_NEW=""
for LINE in $FILE_OLD; do
	# When the specified key is found, don't write it just yet. Instead, save it and it's line number.
	# If it is found again, update it and it's line number.
	# This is because when a file is sourced, any specified variables will overwrite the previous occurence of that same variable.
	# That is why we only care about the last occurence of that variable, and we must remove any duplicates.
	if [ "${LINE:0:KEYLEN+1}" == "$KEY=" ]; then SEARCH="$LINE"
	elif [ ! -z "$LINE" ] && [ $MODE != "query" ]; then
		[ $LINE_NO_NEW == 1 ] && FILE_NEW="$LINE" || FILE_NEW="$FILE_NEW$IFS$LINE"
		((LINE_NO_NEW++))
	fi
	((LINE_NO++))
done

if [ $MODE != "query" ]; then # Write new file contents
	LINE_NO_NEW=1
	for LINE in $FILE_NEW; do
		[ $LINE_NO_NEW == 1 ] && echo "$LINE" > "$FILENAME" || echo "$LINE" >> "$FILENAME"
		((LINE_NO_NEW++))
	done
	[ $MODE != "delete" ] && echo "$KEY=$VALUE" >> "$FILENAME"
	echo >> "$FILENAME"
else # Return result
	echo "${SEARCH:KEYLEN+1}"
fi
