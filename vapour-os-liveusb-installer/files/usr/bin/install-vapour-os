#!/bin/bash
DISTRO_ID="vapour-os"
DISTRO_NAME="Vapour OS"
ARCH="$(uname -m)"
ARCH_VERSION="$(/lib/ld-linux-x86-64.so.2 --help | grep -m 1 "supported, searched" | cut -d '(' -f 1 | xargs)"
CPU_MODEL="$(lscpu | grep -m 1 -i "Vendor ID:" | cut -d ':' -f 2 | xargs)"

[ "$(whoami)" != "root" ] && echo "[ERROR] You must run this installer as root" && exit 1
([ -z "$DEBUG" ] && [ "$DEBUG" != 1 ]) && DEBUG=0 || echo "Debug mode enabled"
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
PAGE=0 # 0: Main menu, 1: Select preset, 2: Select root partition, 3: Select boot partition

GetDisks() {
	unset DISKCHOICES # Numbered list of disks to be used later by dialog (1 /dev/sda 2 /dev/nvme0n1 etc...)
	DISKS=$(lsblk -dnpo NAME) # List of disks
	DISKNO=1
	for DISK in $DISKS; do
		DISKCHOICES="$DISKCHOICES $DISKNO $DISK"
		((DISKNO++))
	done
	unset DISK DISKNO
}

GetPartitions() {
	unset SYSPARTITIONS PARTCHOICES PARTITIONS
	GetDisks
	for DISK in $DISKS; do
		SYSPARTITIONS="$SYSPARTITIONS $(lsblk $DISK -lnpo NAME | grep -vx "$DISK")"
	done
	PARTNO=1
	for PARTITION in $SYSPARTITIONS; do
		# First, check that this partition hasn't already been chosen
		if ([ -z $ROOT_DEV ] || [ $ROOT_DEV != "$PARTITION" ]) &&
		([ -z $BOOT_DEV ] || [ $BOOT_DEV != "$PARTITION" ]) &&
		([ -z $HOME_DEV ] || [ $HOME_DEV != "$PARTITION" ]) &&
		([ -z $MEDIA_DEV ] || [ $MEDIA_DEV != "$PARTITION" ]) &&
		([ -z $PUBLIC_DEV ] || [ $PUBLIC_DEV != "$PARTITION" ]); then
			PARTCHOICES="$PARTCHOICES $PARTNO $PARTITION"
			PARTITIONS="$PARTITIONS $PARTITION"
			((PARTNO++))
		fi
	done
	unset DISK PARTITION PARTNO SYSPARTITIONS
}

PartitionTool() {
	DISKSELECT=$(dialog --stdout --cancel-label "Back" --title "Partitioning tool" --menu "WARNING: Any changes to partitions will occur immediately after exiting the partitioning tool. Data loss may occur. Please be careful!\n\nPlease select disk:" 0 0 0 $DISKCHOICES)
	if [ ! -z $DISKSELECT ]; then
		DISK=$(echo $DISKS | cut -d ' ' -f $DISKSELECT)
		## Try to launch cfdisk, then fdisk if cfdisk isn't available, then display an error (debug)
		cfdisk $DISK || fdisk $DISK || dialog --title "Error" --msgbox "Failed to launch partitioning tool or failed to open $DISK!" 0 0
	fi
}

PartitionChooser() {
	case $PAGE in # Partition name to be displayed in dialog. Unset previously selected partitions if going back a page, and optional if partition is required.
		2) PARTNAME="root"; unset ROOT_DEV FORMAT_ROOT LABEL_ROOT BOOT_DEV FORMAT_BOOT LABEL_BOOT;;
		3) PARTNAME="boot"; unset BOOT_DEV FORMAT_BOOT LABEL_BOOT HOME_DEV FORMAT_HOME LABEL_HOME;;
		4) PARTNAME="home"; unset HOME_DEV FORMAT_HOME LABEL_HOME MEDIA_DEV FORMAT_MEDIA LABEL_MEDIA; OPTIONAL="n None";;
		5) PARTNAME="media"; unset MEDIA_DEV FORMAT_MEDIA LABEL_MEDIA PUBLIC_DEV FORMAT_MEDIA LABEL_MEDIA; OPTIONAL="n None";;
		6) PARTNAME="public"; unset PUBLIC_DEV FORMAT_PUBLIC LABEL_PUBLIC; OPTIONAL="n None";;
		7) PARTNAME="swap"; unset SWAP_DEV; OPTIONAL="n None";;
	esac
	GetPartitions
	PARTSELECTNO=$(dialog --stdout --cancel-label "Back" --title "Partition selection" --menu "Please select $PARTNAME partition:" 0 0 0 $OPTIONAL $PARTCHOICES "p" "Launch partitioning tool")
	if [ -z $PARTSELECTNO ]; then ((PAGE--)) # Go back a page if back is selected
	elif [ $PARTSELECTNO == "p" ]; then PartitionTool
	else
		if [ $PARTSELECTNO != "n" ]; then # Select this partition unless "none" chosen
			PARTSELECT=$(echo $PARTITIONS | cut -d ' ' -f $PARTSELECTNO)
			FSTYPE=$(lsblk $PARTSELECT -dnpo FSTYPE) # Get partition type
			FSSIZE=$(lsblk $PARTSELECT -dnpo SIZE) # Get partition size
			FSSIZE_BYTES=$(blockdev --getsize64 $PARTSELECT) # Get partition size in bytes
			LABEL=$(lsblk $PARTSELECT -dnpo LABEL) # Get partition label
			if [ $FSTYPE == "swap" ]; then [ -z "$(cat /proc/swaps | grep "$PARTSELECT")" ] && MOUNTED="No" || MOUNTED="Yes"
			else [ -z "$(mount | grep "$PARTSELECT")" ] && MOUNTED="No" || MOUNTED="Yes"; fi

			if [ $PARTNAME == "root" ] && [ $FSSIZE_BYTES -lt 2147483648 ]; then
				dialog --title "Partition info" --msgbox "Device:  $PARTSELECT\nLabel:   $LABEL\nSize:    $FSSIZE\nType:    $FSTYPE\nMounted: $MOUNTED\n\nThe selected partition is too small. It needs to be at least 2GiB in size." 0 0
				CONFIRM=0
			elif [ $PARTNAME == "boot" ] && [ $FSSIZE_BYTES -lt 536870912 ]; then
				dialog --title "Partition info" --msgbox "Device:  $PARTSELECT\nLabel:   $LABEL\nSize:    $FSSIZE\nType:    $FSTYPE\nMounted: $MOUNTED\n\nThe selected partition is too small. It needs to be at least 512MiB in size." 0 0
				CONFIRM=0
			else
				## Display partition info and confirm or go back
				dialog --title "Partition info" --yesno "Device:  $PARTSELECT\nLabel:   $LABEL\nSize:    $FSSIZE\nType:    $FSTYPE\nMounted: $MOUNTED\n\nSelect as $PARTNAME partition?" 0 0 && CONFIRM=1 || CONFIRM=0
			fi

			if [ $CONFIRM == 1 ]; then
				## Check partition is formatted correctly (vfat for ESP, ext4 for all others except swap)
				if ([ $PARTNAME == "root" ] && [ $FSTYPE == "ext4" ]) ||
				([ $PARTNAME == "boot" ] && [ $FSTYPE == "vfat" ]) ||
				([ $PARTNAME == "home" ] && [ $FSTYPE == "ext4" ]) ||
				([ $PARTNAME == "media" ] && [ $FSTYPE == "ext4" ]) ||
				([ $PARTNAME == "public" ] && [ $FSTYPE == "ext4" ]); then
					dialog --title "Format partition" --yesno "Would you like to format this partition?\nIf you do, all data on this partition will be lost forever.\nIf not, only system files from the previous Linux installation will be removed, and all other files will be kept." 0 0 && FORMAT=1 || FORMAT=0
				elif [ $PARTNAME != "swap" ]; then # Partition is not formatted correctly
					dialog --title "Warning" --msgbox "This partition appears to be unformatted or incorrectly formatted. It will be formatted before installation. If it contains important data, back it up now!" 0 0
					FORMAT=1
				fi
				## Detect existing label if possible, otherwise suggest default label. Then, ask to set the label.
				if [ -z "$LABEL" ]; then
					if [ $PARTNAME == "root" ]; then LABEL="$DISTRO_ID"
					elif [ $PARTNAME == "boot" ]; then LABEL="BOOT"
					else LABEL="$PARTNAME"; fi
				fi
				LABEL="$(dialog --stdout --cancel-label "None" --title "Volume label" --inputbox "Enter volume label:" 0 0 "$LABEL")"
				[ $FSTYPE == "vfat" ] && LABEL="${LABEL^^}" # Capitalise label if partition type is vfat
			fi
		else unset PARTSELECT FORMAT LABEL; CONFIRM=1; fi
		if [ $CONFIRM == 1 ]; then
			case $PARTNAME in
				"root") export ROOT_DEV=$PARTSELECT; export FORMAT_ROOT=$FORMAT; export LABEL_ROOT="$LABEL";;
				"boot") export BOOT_DEV=$PARTSELECT; export FORMAT_BOOT=$FORMAT; export LABEL_BOOT="${LABEL^^}";;
				"home") export HOME_DEV=$PARTSELECT; export FORMAT_HOME=$FORMAT; export LABEL_HOME="$LABEL";;
				"media") export MEDIA_DEV=$PARTSELECT; export FORMAT_MEDIA=$FORMAT; export LABEL_MEDIA="$LABEL";;
				"public") export PUBLIC_DEV=$PARTSELECT; export FORMAT_PUBLIC=$FORMAT; export LABEL_PUBLIC="$LABEL";;
				"swap") export SWAP_DEV=$PARTSELECT; export LABEL_SWAP="$LABEL";;
			esac
			unset FSTYPE PARTSELECT PARTSELECTNO PARTNAME PARTITIONS PARTCHOICES OPTIONAL LABEL FORMAT
			((PAGE++))
		fi
	fi
}
SelectVersion() {
	unset VERSION_TO_INSTALL
	case $(cat /$DISTRO_ID-live) in
		xfce)
			export VERSION_TO_INSTALL=$(dialog --stdout --cancel-label "Back" --title "Version selection" --menu "Please select a version to install:" 0 0 0 \
			"vapour-os-xfce" "XFCE (best for older devices)" \
			"vapour-os-kde" "KDE Plasma (best features and support)" \
			"vapour-os-desktop-libs" "Command line only (PCs/laptops)" \
			"vapour-os" "Core system only (servers and embedded devices)");;
		*)
			export VERSION_TO_INSTALL=$(dialog --stdout --cancel-label "Back" --title "Version selection" --menu "Please select a version to install:" 0 0 0 \
			"vapour-os-kde" "KDE Plasma (best features and support)" \
			"vapour-os-xfce" "XFCE (best for older devices)" \
			"vapour-os-desktop-libs" "Command line only (PCs/laptops)" \
			"vapour-os" "Core system only (servers and embedded devices)");;
	esac
	[ -z "$VERSION_TO_INSTALL" ] && ((PAGE--)) || ((PAGE++))
}
SelectKernel() {
	unset KERNELS
	export KERNELS="$(dialog --stdout --cancel-label "Back" --title "Linux kernel" --checklist "Select one or more Linux kernels to install:" 0 0 0 \
	"linux-zen" "Linux ZEN kernel and modules" "ON" \
	"linux" "Linux kernel and modules" "OFF" \
	"linux-lts" "Linux LTS kernel and modules" "OFF" \
	"linux-hardened" "Security-Hardened Linux kernel and modules" "OFF" \
	"linux-rt" "Linux realtime kernel and modules" "OFF" \
	"linux-rt-lts" "Linux realtime LTS kernel and modules" "OFF" \
	"linux-drm-next-git" "Linux kernel and modules with bleeding-edge GPU drivers" "OFF" \
	"linux-drm-tip-git" "Linux kernel and modules with bleeding-edge GPU drivers" "OFF" \
	"linux-git" "Linux kernel and modules (git)" "OFF" \
	"linux-lqx" "Linux Liquorix kernel and modules" "OFF" \
	"linux-mainline" "Linux Mainline kernel and modules" "OFF" \
	"linux-next-git" "Linux NEXT kernel and modules" "OFF" \
	"linux-xanmod" "Linux kernel and modules with Xanmod patches" "OFF" \
	"linux-xanmod-lts" "Linux LTS kernel and modules with Xanmod patches" "OFF" \
	"linux-xanmod-rt" "Linux realtime kernel and modules with Xanmod patches" "OFF")"
	[ -z "$KERNELS" ] && ((PAGE--)) || ((PAGE++))
}
SelectAdditionalSoftware() {
	unset ADDITIONAL_SOFTWARE
	export ADDITIONAL_SOFTWARE="$(dialog --stdout --cancel-label "Back" --title "Additional software" --checklist "Would you like to install additional software?" 0 0 0 \
	"vapour-os-multimedia-codecs" "Audio/video codecs" "ON" \
	"vapour-os-gaming" "Support for Windows/Linux games" "OFF" \
	"vapour-os-printer-drivers" "Printer/scanner drivers and services" "ON" \
	"discord" "All in 1 voice/text chat for gamers" "OFF" \
	"firefox" "Privacy focused browser by Mozilla" "ON" \
	"gparted" "Graphical disk partition manager" "OFF" \
	"nano" "Command-line text editor" "ON" \
	"obs-studio" "Screen recording/streaming software" "OFF" \
	"onlyoffice-bin" "Office suite with document, spreadsheet and presentation editors" "ON" \
	"qbittorrent" "Bittorrent client based on QT" "ON" \
	"vlc" "Multi-platform QT multimedia player" "ON")"
	((PAGE++))
}

dialog --title "Welcome" --msgbox "Thank you for choosing $DISTRO_NAME!
$DISTRO_NAME is open source - github.com/dankcuddlybear/vapourepo (some proprietary drivers are included)
If you have issues with the installer, please file a bug report on the Github link above.
If you have any other issues, please consult the excellent Arch Wiki (wiki.archlinux.org) or use a search engine before filing a bug report.
Press ENTER to continue (or CTRL+C to quit at any time)." 0 0
while true; do
	case $PAGE in
		0) # Main menu - choose normal or automated install
			INSTALL_MODE=$(dialog --stdout --cancel-label "Exit" --title "Main menu" --menu "What would you like to do?" 0 0 0 "1" "Install $DISTRO_NAME" "2" "Load preset for automated install (not yet available)")
			if [ -z $INSTALL_MODE ]; then clear; echo "Aborted installation."; exit # Abort installation if abort is selected
			elif [ $INSTALL_MODE == 1 ]; then PAGE=2
			elif [ $INSTALL_MODE == 2 ]; then PAGE=1
			fi
			;;
		1) # Preset chooser
			if [ $INSTALL_MODE == 1 ]; then PAGE=0 # Go to first page if not using automated install
			else
				dialog --title "Error" --msgbox "This feature is not yet implemented." 0 0
				PAGE=0
			fi
			;;
		# Choose partitions
		2) PartitionChooser;; 3) PartitionChooser;; 4) PartitionChooser;; 5) PartitionChooser;; 6) PartitionChooser;; 7) PartitionChooser;;
		8) SelectKernel;; 9) SelectVersion;; 10) SelectAdditionalSoftware;;
		11) # Connect to the internet
			ping -c 1 archlinux.org &> /dev/null && INTERNET_CONNECTED=1 || INTERNET_CONNECTED=0
			if [ $INTERNET_CONNECTED == 0 ]; then
				dialog --title "No internet connection" --yesno \
				"It looks like you aren't connected to the internet. An internet connection is required to install $DISTRO_NAME. Please verify that you are connected.
				\nOpen NetworkManager menu?" 0 0 && nmtui
			fi
			((PAGE++))
			;;
		12) # Review settings before install
			## Generate dialog text
			FINALTEXT="$DISTRO_NAME is ready to be installed. Please review the following changes:\n[ROOT] $ROOT_DEV"
			[ ! -z "$LABEL_ROOT" ] && FINALTEXT="$FINALTEXT \"$LABEL_ROOT\""; [ $FORMAT_ROOT == 1 ] && FINALTEXT="$FINALTEXT (format)"
			FINALTEXT="$FINALTEXT\n[BOOT] $BOOT_DEV"; [ ! -z "$LABEL_BOOT" ] && FINALTEXT="$FINALTEXT \"$LABEL_BOOT\""; [ $FORMAT_BOOT == 1 ] && FINALTEXT="$FINALTEXT (format)"
			if [ ! -z $HOME_DEV ]; then
				FINALTEXT="$FINALTEXT\n[HOME] $HOME_DEV"; [ ! -z "$LABEL_HOME" ] && FINALTEXT="$FINALTEXT \"$LABEL_HOME\""; [ $FORMAT_HOME == 1 ] && FINALTEXT="$FINALTEXT (format)"
			fi
			if [ ! -z $MEDIA_DEV ]; then
				FINALTEXT="$FINALTEXT\n[MEDIA] $MEDIA_DEV"; [ ! -z "$LABEL_MEDIA" ] && FINALTEXT="$FINALTEXT \"$LABEL_MEDIA\""; [ $FORMAT_MEDIA == 1 ] && FINALTEXT="$FINALTEXT (format)"
			fi
			if [ ! -z $PUBLIC_DEV ]; then
				FINALTEXT="$FINALTEXT\n[PUBLIC] $PUBLIC_DEV"; [ ! -z "$LABEL_PUBLIC" ] && FINALTEXT="$FINALTEXT \"$LABEL_PUBLIC\""; [ $FORMAT_PUBLIC == 1 ] && FINALTEXT="$FINALTEXT (format)"
			fi
			if [ ! -z $SWAP_DEV ]; then
				FINALTEXT="$FINALTEXT\n[SWAP] $SWAP_DEV"; [ ! -z "$LABEL_SWAP" ] && FINALTEXT="$FINALTEXT \"$LABEL_SWAP\""; FINALTEXT="$FINALTEXT (format)"
			fi
			FINALTEXT="$FINALTEXT\n\nApply changes and begin installation?"
 			dialog --title "Confirm changes" --yesno "$FINALTEXT" 0 0 && ((PAGE++)) || PAGE=9
 			;;
		13) # Begin installation
			clear
			echo "Installation of $DISTRO_NAME has now begun. Grab a cup of tea, because this will take a while."
			echo "DO NOT turn off your device or disconnect it from the internet."
			echo; sleep 2
			ARCH_VERSION="$ARCH_VERSION" CPU_MODEL="$CPU_MODEL" ADDITIONAL_SOFTWARE="$ADDITIONAL_SOFTWARE" DEBUG="$DEBUG" "/usr/lib/$DISTRO_ID/$DISTRO_ID-liveusb-installer"
			sync
			echo; echo "Installation complete! You may reboot your computer."; echo "Press ENTER to continue"; read; exit 0;;
	esac
done
