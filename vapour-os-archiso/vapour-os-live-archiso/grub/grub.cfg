# Load partition table and file system modules
insmod part_gpt
insmod part_msdos
insmod fat
insmod iso9660
insmod ntfs
insmod ntfscomp
insmod exfat
insmod udf

# Use graphics-mode output
insmod all_video
insmod font
if loadfont "${prefix}/fonts/unicode.pf2" ; then
    set gfxmode="auto"
    terminal_input console
    terminal_output console
fi

# Search for the ISO volume
if [ -z "${ARCHISO_UUID}" ]; then
    if [ -z "${ARCHISO_HINT}" ]; then
        regexp --set=1:ARCHISO_HINT '^\(([^)]+)\)' "${cmdpath}"
    fi
    search --no-floppy --set=root --file '%ARCHISO_SEARCH_FILENAME%' --hint "${ARCHISO_HINT}"
    probe --set ARCHISO_UUID --fs-uuid "${root}"
fi

# Set default menu entry
default=vapour-os
timeout=10
timeout_style=menu

# GRUB init tune for accessibility
play 500 400 1

# Menu entries
menuentry "Vapour OS linux-tt" --class arch --class gnu-linux --class gnu --class os --id 'vapour-os' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-tt archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% bgrt_disable fsck.mode=force fsck.repair=yes intel_pstate=disable mem_sleep_default=deep nmi_watchdog=0 nowatchdog acpi_irq_nobalance clocksource=tsc cpufreq.default_governor=schedutil cpuidle.governor=teo drm.vblankoffdelay=1 pcie.port_pm=force tsc=reliable workqueue.power_efficient systemd.firstboot=n copytoram=n
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux-tt.img
}
menuentry "Vapour OS linux-tt - with screen reader" --hotkey s --class arch --class gnu-linux --class gnu --class os --id 'vapour-os-speech {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-tt archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% bgrt_disable fsck.mode=force fsck.repair=yes intel_pstate=disable mem_sleep_default=deep nmi_watchdog=0 nowatchdog acpi_irq_nobalance clocksource=tsc cpufreq.default_governor=schedutil cpuidle.governor=teo drm.vblankoffdelay=1 pcie.port_pm=force tsc=reliable workqueue.power_efficient systemd.firstboot=n copytoram=auto accessibility=on
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux-tt.img
}
menuentry "Vapour OS linux-tt - copy to RAM (16GiB recommended)" --class arch --class gnu-linux --class gnu --class os --id 'vapour-os-ram' {
    set gfxpayload=keep
    linux /%INSTALL_DIR%/boot/x86_64/vmlinuz-linux-tt archisobasedir=%INSTALL_DIR% archisolabel=%ARCHISO_LABEL% bgrt_disable fsck.mode=force fsck.repair=yes intel_pstate=disable mem_sleep_default=deep nmi_watchdog=0 nowatchdog acpi_irq_nobalance clocksource=tsc cpufreq.default_governor=schedutil cpuidle.governor=teo drm.vblankoffdelay=1 pcie.port_pm=force tsc=reliable workqueue.power_efficient systemd.firstboot=n copytoram=auto
    initrd /%INSTALL_DIR%/boot/intel-ucode.img /%INSTALL_DIR%/boot/amd-ucode.img /%INSTALL_DIR%/boot/x86_64/initramfs-linux-tt.img
}

if [ "${grub_platform}" == "efi" ]; then
    if [ "${grub_cpu}" == "x86_64" ]; then
        menuentry "Run Memtest86+ (RAM test)" --class memtest86 --class gnu --class tool {
            set gfxpayload=800x600,1024x768
            linux /boot/memtest86+/memtest.efi
        }
        menuentry "UEFI Shell" {
            insmod chain
            chainloader /shellx64.efi
        }
    elif [ "${grub_cpu}" == "i386" ]; then
        menuentry "UEFI Shell" {
            insmod chain
            chainloader /shellia32.efi
        }
    fi

    menuentry 'UEFI Firmware Settings' --id 'uefi-firmware' {
        fwsetup
    }
fi

