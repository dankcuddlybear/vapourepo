#!/bin/sh
DISTRO_NAME="$(cat /usr/lib/os-release | grep -i "PRETTY_NAME" | cut -d '=' -f 2 | sed 's/"//g')"
SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
SCRIPT_FILENAME="$(basename $0)"
SCRIPT_USER="$(whoami)"
BACKTITLE="$DISTRO_NAME settings [$SCRIPT_USER]"
USERNAME="$1"
COMMAND="$2"

Help() {
	echo "Usage: $SCRIPT_FILENAME <user> <command>"
	echo "Commands:"
	echo "    remove: Remove password"
	echo "    set:    Set/change password"
	echo "    status: Show if the user has a password set"
	exit 0
}
([ -z "$1" ] || [ "$1" == "help" ] || [ "$1" == "--help" ] || [ "$1" == "-h" ] \
[ -z "$2" ] || [ "$2" == "help" ] || [ "$2" == "--help" ] || [ "$2" == "-h" ]) && Help

## Get info
# Get password/lock status
if (passwd -S $USERNAME | grep "$USERNAME NP " &> /dev/null); then HAS_PASSWD=0; LOCKED=0
elif (passwd -S $USERNAME | grep "$USERNAME L " &> /dev/null); then HAS_PASSWD=0; LOCKED=1
else HAS_PASSWD=1; LOCKED=1; fi
# Get home encryption status (u: unlocked, l: locked, n: not encrypted)
if (fscrypt status /home/$USERNAME | grep -i "Unlocked: Yes" &> /dev/null); then ENCRYPTED_HOME="u"
elif (fscrypt status /home/$USERNAME | grep -i "Unlocked: No" &> /dev/null); then ENCRYPTED_HOME="l"
else ENCRYPTED_HOME="n"

case $COMMAND in
	status)
		if [ $HAS_PASSWD == 1 ]; then echo "yes"; exit 0
		else echo "no"; exit 1; fi;;
	set) ## Set/change user password
		if [ $HAS_PASSWD == 1 ]; then ## Password protected
			## If user is changing their own password, or their home directory is encrypted, ask for old and new password.
			## Otherwise, if running as admin (root) and changing another user's password, ask for new password only.
			## Otherwise, if not running as admin deny permission.
			if [ $USERNAME == $SCRIPT_USER ] || [ $ENCRYPTED_HOME != "n" ]; then
				CONTINUE=0; while [ "$CONTINUE" == 0 ]; do ## Ask for old and new password
					PASSWORD_OLD="$(dialog --stdout --backtitle "$DISTRO_NAME settings" --title "Change password for $USERNAME" --passwordbox "Enter current password for $USERNAME.\nYou will not see anything you type. This is for security reasons. When you have entered your password, press enter." 0 0)"
					[ -z "$PASSWORD_OLD" ] && echo "Old password not provided" && exit 1 # Exit if old password is empty
					PASSWORD1="$(dialog --stdout --backtitle "$DISTRO_NAME settings" --title "Change password for $USERNAME" --passwordbox "Enter a secure password for \"$USERNAME\". It must:\n - Be at least 8 characters long\n - Have at least 1 digit, 1 uppercase letter and 1 lowercase letter\n - Not contain commonly used words or passwords (including swear words), even with character substitution, as modern dictionary attacks can easily work around those\n - Contain personal information, like date/place of birth, mother's maiden name, pet names, favourite band/video game etc\n - Be too easy to guess by others\nSee also https://wiki.archlinux.org/title/Security#Passwords\nYou will not see anything you type. This is for security reasons. When you have entered your password, press enter." 0 0)"
					[ -z "$PASSWORD1" ] && echo "New password not provided" && exit 1 # Exit if password is empty
					#
					PASSWORD2="$(dialog --stdout --backtitle "$DISTRO_NAME settings" --title "Change password for $USERNAME" --passwordbox "Enter the same password again." 0 0)"
					if [ "$PASSWORD1" == "$PASSWORD2" ]; then
						(echo "$PASSWORD1"; echo "$PASSWORD1") | passwd "$USERNAME" && CONTINUE=1 || \
						dialog --backtitle "$DISTRO_NAME settings" --title "Error" --msgbox "The old password was incorrect." 0 0
					else dialog --backtitle "$DISTRO_NAME settings" --title "Error" --msgbox "Passwords do not match." 0 0; fi
				done
				##
				## If the directory was locked, update password for it.
				## You will be prompted for the old password and the new password.
				if [ $ENCRYPTED_HOME == "l" ]; then
				fi
			fi

			###########################


		else ## Not password protected
			clear; CONTINUE=0; while [ "$CONTINUE" == 0 ]; do
				PASSWORD1="$(dialog --stdout --backtitle "$DISTRO_NAME settings" --title "Set password for $USERNAME" --passwordbox "Enter a secure password for \"$USERNAME\". It must:\n - Be at least 8 characters long\n - Have at least 1 digit, 1 uppercase letter and 1 lowercase letter\n - Not contain commonly used words or passwords (including swear words), even with character substitution, as modern dictionary attacks can easily work around those\n - Contain personal information, like date/place of birth, mother's maiden name, pet names, favourite band/video game etc\n - Be too easy to guess by others\nSee also https://wiki.archlinux.org/title/Security#Passwords\nYou will not see anything you type. This is for security reasons. When you have entered your password, press enter." 0 0)"
				[ -z "$PASSWORD1" ] && echo "Password not set" && exit 1 # Exit if password is empty
				PASSWORD2="$(dialog --stdout --backtitle "$DISTRO_NAME settings" --title "Add user" --passwordbox "Enter the same password again." 0 0)"
				if [ "$PASSWORD1" == "$PASSWORD2" ]; then (echo "$PASSWORD1"; echo "$PASSWORD1") | passwd "$USERNAME"; CONTINUE=1
				else dialog --backtitle "$DISTRO_NAME settings" --title "Error" --msgbox "Passwords do not match." 0 0; fi
			done
		fi
		;;
	remove)
		;;
	*) echo "[ERROR] Invalid command $COMMAND"; exit 1;;
esac
